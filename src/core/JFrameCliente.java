/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package core;

import cliente.JFrameEditarCliente;
import cliente.JFrameInserirCliente;
import database.DBWorker;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.ResultSetTableModel;
import tarefas.RecTarefas;

/**
 *
 * @author Admin
 */
public class JFrameCliente extends javax.swing.JFrame {

    private DBWorker dbWorker;
    private ResultSetTableModel defaultTable;
    /**
     * Creates new form JFrameCliente
     */
    public JFrameCliente() {
        initComponents();
        this.pack();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        try {
            String servidor = "127.0.0.1";
            String user = "root";
            String password = "";
            String baseDados = "gice";
        
            dbWorker = new DBWorker(servidor, user, password, baseDados);
            ResultSet rs = dbWorker.executeQuery("SELECT * FROM clientes");
            defaultTable = new ResultSetTableModel(rs);
            jTableCliente.setModel(defaultTable);
        } catch (SQLException | ClassNotFoundException | IllegalAccessException | InstantiationException ex) {
            Logger.getLogger(JFrameCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCliente = new javax.swing.JTable();
        btnRemoverCliente = new javax.swing.JButton();
        btnInserirCliente = new javax.swing.JButton();
        btnEditarCliente = new javax.swing.JButton();
        btnListarClientes = new javax.swing.JButton();
        btnRecolonizar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jTableCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableClienteKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCliente);

        btnRemoverCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRemoverCliente.setText("Remover");
        btnRemoverCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverClienteActionPerformed(evt);
            }
        });

        btnInserirCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnInserirCliente.setText("Adicionar");
        btnInserirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirClienteActionPerformed(evt);
            }
        });

        btnEditarCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEditarCliente.setText("Alterar");
        btnEditarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarClienteActionPerformed(evt);
            }
        });

        btnListarClientes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnListarClientes.setText("Listar");
        btnListarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarClientesActionPerformed(evt);
            }
        });

        btnRecolonizar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRecolonizar.setText("Recolonizar");
        btnRecolonizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecolonizarActionPerformed(evt);
            }
        });

        jMenu1.setText("Principal");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Funcionario");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnInserirCliente)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemoverCliente)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditarCliente)
                        .addGap(18, 18, 18)
                        .addComponent(btnListarClientes)
                        .addGap(18, 18, 18)
                        .addComponent(btnRecolonizar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnInserirCliente)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnRemoverCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEditarCliente)
                        .addComponent(btnListarClientes)
                        .addComponent(btnRecolonizar)))
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInserirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirClienteActionPerformed
        // TODO add your handling code here:
        JFrameInserirCliente jInserir = new JFrameInserirCliente();
        jInserir.setLocation(this.getLocation().x,this.getLocation().y);
        jInserir.setVisible(true);
    }//GEN-LAST:event_btnInserirClienteActionPerformed

    private void btnRemoverClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverClienteActionPerformed
        try {
            //Verifica se selicionou um registo do cliente
            int index = jTableCliente.getSelectedRow();
            if(index != -1) {
                //Vai buscar o cartao de cidadao do cliente
                int indexID = Integer.parseInt(defaultTable.getValueAt(index, 0).toString());
                
                //Contagem das tarefas
                String contagem = "SELECT COUNT(*) AS numTarefas FROM tarefas WHERE cliente_cc = " + indexID + ";";
                ResultSet rsTarefas = dbWorker.executeQuery(contagem);
                int numTarefas = 0;
                if(rsTarefas.next()) {
                    numTarefas = rsTarefas.getInt("numTarefas");
                }
                
                //Buscar as tarefas associadas a esse cliente
                String sqlTarefas = "SELECT * FROM tarefas WHERE cliente_cc = " + indexID + ";";
                rsTarefas = dbWorker.executeQuery(sqlTarefas);
                ArrayList<Integer> tarefasDoCliente = new ArrayList<>();
                while(rsTarefas.next()) {
                    tarefasDoCliente.add(rsTarefas.getInt("codigo"));
                }
                
                //Contagem das inhas de tarefas associadas a chave primaria de tarefas
                int numLinhaTarefas = 0;
                for(int i = 0; i < tarefasDoCliente.size(); i++) {
                    String sqlLinhaTarefa = "SELECT COUNT(*) AS numLinhaTarefas FROM linhatarefas WHERE codigo_tarefa = " + tarefasDoCliente.get(i) + ";";
                    ResultSet rsLinhaTarefas = dbWorker.executeQuery(sqlLinhaTarefa);
                    if(rsLinhaTarefas.next()) {
                        numLinhaTarefas += rsLinhaTarefas.getInt("numLinhaTarefas");
                    }
                }
                
                //Messagem que aparece na caixa de dialogo
                String messagem = "O cliente com o cartao de cidadado '" + indexID + "' tem " + numTarefas + " tarefas \ne " + numLinhaTarefas + " linhas de tarefas. "
                         + "Tem acerteza que quer eliminar?";
                
                int resultado = JOptionPane.showConfirmDialog(rootPane, messagem, "Atencao", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                
                //Eliminacao do cliente 
                String sqlCode = "";
                if(resultado == JOptionPane.YES_OPTION) {
                    if(numLinhaTarefas != 0) {
                        //Eliminacao das Linhas de Tarefas pela a chave primaria de tarefas
                        for(int i = 0; i < tarefasDoCliente.size(); i++) {
                            sqlCode = "DELETE FROM linhatarefas WHERE codigo_tarefa = " + tarefasDoCliente.get(i) + ";";
                            dbWorker.executeUpdate(sqlCode);
                        }
                    }
                    //Elmininacao das Tarefas
                    if(numTarefas != 0) {
                        sqlCode = "DELETE FROM tarefas WHERE cliente_cc = " + indexID + ";";
                        dbWorker.executeUpdate(sqlCode);
                    }
                    //Elimininacao do Cliente
                    sqlCode = "DELETE FROM clientes WHERE cartao_cidadao = " + indexID + ";";
                    dbWorker.executeUpdate(sqlCode);
                }
                
//                String remover = "DELETE FROM clientes WHERE cartao_cidadao = " + indexID + ";";
//                dbWorker.executeUpdate(remover);
//                
                //Atualizacao da Tabela de Clientes
                ResultSet rs = dbWorker.executeQuery("SELECT * FROM clientes");
                ResultSetTableModel dTable = new ResultSetTableModel(rs);
                jTableCliente.setModel(dTable);
            }
        } catch (SQLException ex) {
            Logger.getLogger(JFrameCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRemoverClienteActionPerformed

    private void btnEditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarClienteActionPerformed
        try {
            // TODO add your handling code here:
            int index = jTableCliente.getSelectedRow();
            ResultSet rs = dbWorker.executeQuery("SELECT * FROM clientes");
            ResultSetTableModel dTable = new ResultSetTableModel(rs);
            int indexID = Integer.parseInt(dTable.getValueAt(index, 0).toString());
            
            JFrameEditarCliente edCliente = new JFrameEditarCliente();
            edCliente.txtCC.setText(dTable.getValueAt(index, 0).toString());
            edCliente.txtNome.setText(dTable.getValueAt(index, 1).toString());
            edCliente.txtTelemovel.setText(dTable.getValueAt(index, 3).toString());
            edCliente.txtMorada.setText(dTable.getValueAt(index, 2).toString());
            edCliente.ccID = indexID;
            
            edCliente.setLocation(this.getLocation().x,this.getLocation().y);
            edCliente.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(JFrameCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditarClienteActionPerformed

    private void btnListarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarClientesActionPerformed
        try {
            // TODO add your handling code here:
            String servidor = "127.0.0.1";
            String user = "root";
            String password = "";
            String baseDados = "gice";
            dbWorker = new DBWorker(servidor, user, password, baseDados);
            ResultSet rs = dbWorker.executeQuery("SELECT * FROM clientes");
            defaultTable = new ResultSetTableModel(rs);
            jTableCliente.setModel(defaultTable);
        } catch (SQLException | ClassNotFoundException | IllegalAccessException | InstantiationException ex) {
            Logger.getLogger(JFrameCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnListarClientesActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        JFrameFuncionario f = new JFrameFuncionario();
        f.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        JFramePrincipal p = new JFramePrincipal();
        p.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu1MouseClicked

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
//        if(evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
//            JFramePrincipal p = new JFramePrincipal();
//            p.setVisible(true);
//            this.dispose();
//        }
    }//GEN-LAST:event_formKeyPressed

    private void jTableClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableClienteKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            JFramePrincipal p = new JFramePrincipal();
            p.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jTableClienteKeyPressed

    private void btnRecolonizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecolonizarActionPerformed
        try {
            // TODO add your handling code here:
            RecTarefas r = new RecTarefas();
            r.RecolonizarClientes();
            
            ResultSet rs = dbWorker.executeQuery("SELECT * FROM clientes");
            defaultTable = new ResultSetTableModel(rs);
            jTableCliente.setModel(defaultTable);
        } catch (SQLException ex) {
            Logger.getLogger(JFrameCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRecolonizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditarCliente;
    private javax.swing.JButton btnInserirCliente;
    private javax.swing.JButton btnListarClientes;
    private javax.swing.JButton btnRecolonizar;
    private javax.swing.JButton btnRemoverCliente;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCliente;
    // End of variables declaration//GEN-END:variables
}
